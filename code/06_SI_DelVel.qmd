---
title: 'Figure 6: Defining resilience and susceptibility'
format:
    html:
        code-fold: false
        self-contained: true
        toc: true
editor:
    render-on-save: false
---

Figure 6 explores the relationship between the standard metric SI Ratio with the new metric $\Delta$Velocity, and proposes a new cut-off including both metrics. Figure S4 expands on this finding by exploring the grouping based on the novel cutoff in the OFT. Thie notebook generates Figure 6 and Figure S4 as well as statistics for the results section **Attenuated Î”Velocity generalizes across female social stress models**.

### Libraries and Config

```{r}
#| label: libraries
#| message: false
#| code-fold: true

library(here)
library(glue)
library(dplyr)
library(magrittr)
library(ggplot2)
library(ggpubr)
library(ggpmisc)
library(cowplot)
library(scales)
library(knitr)
library(pander)
library(emmeans)
```

```{r}
#| label: config + paths + data
#| code-fold: true

source(here('styles.R'))
data_path <- here('data')
primary_diff <- readRDS(glue('{data_path}/SIT_diff_primary.rds'))
secondary_diff <- readRDS(glue('{data_path}/SIT_diff_secondary.rds'))
OFT <- readRDS(glue('{data_path}/OFT_primary.rds'))

# Bind primary and secondary DFs 
primary_diff %<>%
    mutate(model = 'CSW/DS',
           lab = 'bagot') %>%
    select(names(secondary_diff)) 
SIT_diff <- bind_rows(primary_diff, secondary_diff) %>%
                      mutate(model = factor(model, levels = c('CSW/DS', 'CSNDS', 'Urine')),
                             full_cond = paste(Sex, Condition))
```

------------------------------------------------------------------------

### Relationship between SI Ratio and $\Delta$ Velocity (Fig. 6a)

Si data are binned before plotting. The majority of SI ratio values are within 1 - 2, with only sparse coverage below 1. We are specifically interested in the relationship between low SI ratio values and $\Delta$Velocity, and without binning the data, the relationship to lower values will be difficult to understand due to their sparsity.

```{r}
#| label: SI ratio bins + Fig. 6a prep
#| code-fold: true

# Bin data
SIT_diff %>% 
  mutate(SI_bin = cut(IZ_time, breaks = seq(0, max(IZ_time) + 0.1, .25))) %>%
  mutate(SI_bin = gsub('\\(', '', gsub('\\]', '', gsub('\\,', ' - ', SI_bin)))) -> SIT_diff

# Make labels look prettier
SIT_diff$SI_bin[grepl('0 ', SIT_diff$SI_bin)] <- gsub('0 ','0.00 ', 
                                                      SIT_diff$SI_bin[grepl('0 ', SIT_diff$SI_bin)])
SIT_diff$SI_bin[grepl('0.5 ', SIT_diff$SI_bin)] <- gsub('0.5 ','0.50 ', 
                                                      SIT_diff$SI_bin[grepl('0.5 ', SIT_diff$SI_bin)])
SIT_diff$SI_bin[grepl(' 0.5', SIT_diff$SI_bin)] <- gsub(' 0.5$',' 0.50', 
                                                      SIT_diff$SI_bin[grepl(' 0.5', SIT_diff$SI_bin)])
SIT_diff$SI_bin[grepl('1 ', SIT_diff$SI_bin)] <- gsub('1 ','1.00 ', 
                                                      SIT_diff$SI_bin[grepl('1 ', SIT_diff$SI_bin)])
SIT_diff$SI_bin[grepl(' 1', SIT_diff$SI_bin)] <- gsub(' 1$',' 1.00', 
                                                      SIT_diff$SI_bin[grepl(' 1', SIT_diff$SI_bin)])
SIT_diff$SI_bin[grepl('1.5 ', SIT_diff$SI_bin)] <- gsub('1.5 ','1.50 ', 
                                                      SIT_diff$SI_bin[grepl('1.5 ', SIT_diff$SI_bin)])
SIT_diff$SI_bin[grepl(' 1.5', SIT_diff$SI_bin)] <- gsub(' 1.5$',' 1.50', 
                                                      SIT_diff$SI_bin[grepl(' 1.5', SIT_diff$SI_bin)])
SIT_diff$SI_bin[grepl(' 2', SIT_diff$SI_bin)] <- gsub(' 2$',' 2.00', 
                                                      SIT_diff$SI_bin[grepl(' 2', SIT_diff$SI_bin)])
SIT_diff$SI_bin[SIT_diff$IZ_time > 2] <- '2.00 +'
SIT_diff$SI_bin_window <- ifelse(SIT_diff$IZ_time > 2, 'B', 'A')
SIT_diff$model <- factor(SIT_diff$model, levels = c('CSW/DS', 'CSNDS', 'Urine'))
```

```{r}
#| label: Fig 6a plot
#| code-fold: true
#| fig-width: 10
#| fig-asp: 0.65
#| fig-align: center

ggplot(SIT_diff, aes(SI_bin, Velocity)) + 
  geom_vline(xintercept = 4.5) + 
  geom_jitter(aes(color = full_cond), 
              width = 0.1, alpha = 0.5, size = 2, height = 0) +
  stat_summary(aes(shape = model), fun = 'mean', geom = 'point', size = 2) + 
  stat_summary(aes(group = model, linetype = model), 
               fun.data = 'mean_se', geom = 'line', 
               linewidth = 1) + 
  scale_y_continuous(name = expression(Delta*' Velocity'), 
                     limits = c(-4,10), breaks = c(-4,-2,0,2,4,6,8,10)) + 
  scale_x_discrete(name = 'SI Ratio (Binned)') + 
  scale_color_manual(values = col_full) + 
  scale_fill_manual(values = col_full) +
  facet_grid(. ~ Sex, scales = 'free', space = 'free') +
  plot_theme + 
  theme(legend.position = 'bottom',
        legend.title = element_blank(),
         axis.text.x = element_text(angle = 45, hjust = 1))
```

### Resilience/susceptibility cut-offs (Fig. 6b)

We are proposing a distribution based cut-off for $\Delta$Velocity in addition to the existing cut-off sued for SI ratio. We suggest to. use both cut-offs, based on the small but significant effect observed in SI ratio, as well as the U-shaped relationship between SI ratio and $\Delta$Velocity. Based on CSW/DS data, we identify the 10% lower bound one-sided z-score CI (i.e., 1.28 SD below mean) for a cut-off that assigns susceptibility to stressed females that behave outside the commonly observed range of control $\Delta$Velocity values, which we will approximate with 1.5:

```{r}
#| label: DelVel distribution
#| code-fold: true

CI_data <- SIT_diff$Velocity[SIT_diff$model == 'CSW/DS' & 
                             SIT_diff$Condition == 'Ctl' & 
                             SIT_diff$Sex == 'Female']

mu <- mean(CI_data)
CI_range <- 1.28 * sd(CI_data)
CI_low <- mu - CI_range

print(paste('Mean:', mu, '; SD:', sd(CI_data), '; Lower CI Boundary:', CI_low))
```

The scatterplot below highlights all susceptible females, defined either by SI ratio or $\Delta$Velocity of both. Notably, the large majority of points identified are stressed females.

```{r}
#| label: Fig 6b plot
#| code-fold: true
#| fig-width: 6.5
#| fig-asp: 1
#| fig-align: center
#| warning: false

Cor_plot <- ggplot(SIT_diff[SIT_diff$Sex == 'Female',], aes(IZ_time, Velocity)) + 
                      geom_segment(aes(x = 1, xend = 3.2, y = 1.5, yend = 1.5)) +
                      geom_segment(aes(x = 1, xend = 1, y = 1.5, yend = 9.3)) +
                      geom_point(data = SIT_diff[SIT_diff$Sex == 'Female' &
                                              SIT_diff$IZ_time > 1 & SIT_diff$Velocity > 1.5,], 
                                              aes(color = Condition, shape = model), size = 2, alpha = 0.3) + 
                      geom_point(data = SIT_diff[SIT_diff$Sex == 'Female' &
                                              (SIT_diff$IZ_time < 1 | SIT_diff$Velocity < 1.5),], 
                                              aes(color = Condition, shape = model), size = 3, alpha = 0.7) + 
                      scale_color_manual(values = col_full) +
                      scale_x_continuous(limits = c(0,3.2)) + 
                      xlab('SI Ratio') + ylab(expression(Delta*' Velocity')) +
                      plot_theme + 
                      theme(legend.position = 'bottom',
                            legend.title =  element_blank(), 
                            plot.margin = unit(c(0,0,0,0), 'cm'))

SI_hist <- ggplot(SIT_diff[SIT_diff$Sex == 'Female',], 
                  aes(IZ_time, color = Condition, fill = Condition)) + 
              geom_density(alpha = 0.4) + 
              geom_vline(xintercept = 1) + 
              scale_color_manual(values = col_full) + 
              scale_fill_manual(values = col_full) + 
              scale_x_continuous(limits = c(0,3.2)) + 
              plot_theme +
              clean_theme() + 
              theme(legend.position = 'none',
                    plot.margin = unit(c(0,0,0,0), 'cm')) 

DelVel_hist <- ggplot(SIT_diff[SIT_diff$Sex == 'Female',], 
                      aes(Velocity, color = Condition, fill = Condition)) + 
                  geom_density(alpha = 0.4) + 
                  geom_vline(xintercept = 1.5) + 
                  scale_color_manual(values = col_full) + 
                  scale_fill_manual(values = col_full) + 
                  plot_theme +
                  coord_flip() +
                  clean_theme() + 
                  theme(legend.position = 'none',
                        plot.margin = unit(c(0,0,0,0), 'cm'))

plot_grid(SI_hist, NULL, Cor_plot, DelVel_hist, align = 'hv', 
          rel_widths = c(3,1), rel_heights = c(1,3))
```

------------------------------------------------------------------------

### General stress-induced phenotype in OFT (Fig. S4)

Defeated **males** demonstrate a decrease in the time spent in the center of the arena, whether they are susceptible or resilient as classified by the SI ratio, suggesting a dissociation of social stress effects on social reward and anxiety-like behavior.

In **females**, we do not see a general stress effect when looking at time spent in the center of the arena. However, we do observe an increase in velocity in all stressed animals, whether they were classified as susceptible or resilient by $\Delta$Velocity+SI. This suggests that the observed SIT $\Delta$ Velocity effects are specific to the interaction with the CD1 aggressor. This additionally further points towards hyperlocomotion as being an indicator of anxiety-like behavior in females.

```{r}
#| label: Fig s4 prep
#| code-fold: true

# Annotate OFT data with SI data (SI ratio, Delta Vel) and group based on cut-offs
OFT %<>%
    mutate(SI_ratio = SIT_diff$IZ_time[match(id_full, SIT_diff$id_full)],
           Del_Vel = SIT_diff$Velocity[match(id_full, SIT_diff$id_full)],
           group_SIratio = ifelse(Condition == 'Stress' & SI_ratio > 1, 
                                  'Res', 
                                  ifelse(Condition == 'Stress' & SI_ratio < 1, 
                                  'Sus', 'Ctl')),
           group_Velocity = ifelse(Condition == 'Stress' & Del_Vel > 1.5, 
                                   'Res', 
                                   ifelse(Condition == 'Stress' & Del_Vel < 1.5, 
                                   'Sus', 'Ctl')),
           group_SI_Velocity = ifelse(group_Velocity == 'Sus' | 
                                      group_SIratio == 'Sus', 
                                      'Sus', group_Velocity),
           group_SI_Velocity = ifelse(Sex == 'Male', 
                                      group_SIratio, group_SI_Velocity),
           group_full = paste(Sex, group_SI_Velocity)) %>%
    na.omit() # drop animals that don't have SI
```

```{r}
#| label: Fig s4 plot
#| code-fold: true
#| fig-width: 10
#| fig-asp: 0.65
#| fig-align: center
#| warning: false

cor_plot <- ggplot(OFT, aes(Velocity, Del_Vel, color = cond_full)) + 
                geom_point(alpha = 0.6) +
                stat_poly_line() +
                stat_poly_eq(size = 4, label.y = 'top', label.x = 'right') +
                scale_y_continuous(breaks = pretty_breaks(), 
                                   name = (expression(Delta*' Velocity (SIT)')), 
                                   expand = c(0,0,0.3,0)) +
                xlab('Mean Velocity (OFT)') + 
                facet_grid(Sex ~ .) + 
                scale_color_manual(values = col_full) + 
                scale_fill_manual(values = col_full) + 
                plot_theme 

center_time <- ggplot(OFT, aes(group_SI_Velocity, Velocity, color = group_full)) + 
                    geom_jitter(width = 0.2, alpha = 0.2, height = 0) +
                    stat_summary(fun = 'mean', geom = 'point', size = 2) + 
                    stat_summary(fun.data = 'mean_se', geom = 'errorbar', 
                                 linewidth = 1, width = 0.4) + 
                    scale_y_continuous(name = 'Mean Velocity', expand = c(0,0,0.3,0)) +
                    facet_grid(Sex ~ .) + 
                    scale_color_manual(values = col_stress) + 
                    scale_fill_manual(values = col_stress) + 
                    plot_theme + 
                    theme(axis.title.x = element_blank())

velocity <- ggplot(OFT, aes(group_SI_Velocity, Center_Middle_Time, color = group_full)) + 
                geom_jitter(width = 0.2, alpha = 0.2, height = 0) +
                stat_summary(fun = 'mean', geom = 'point', size = 2) + 
                stat_summary(fun.data = 'mean_se', geom = 'errorbar', 
                             linewidth = 1, width = 0.4) + 
                scale_y_continuous(name = 'Time in Center (s)', expand = c(0,0,0.3,0)) +
                facet_grid(Sex ~ .) + 
                scale_color_manual(values = col_stress) + 
                scale_fill_manual(values = col_stress) + 
                plot_theme +
                theme(axis.title.x = element_blank())

plot_grid(cor_plot, center_time, velocity, align = 'hv', 
          nrow = 1, rel_widths = c(1.5,1,1))
```

```{r}
#| label: Fig s4 stats
#| code-fold: true

# Velocity correlations with Delta Velocity 
F_ctl <- cor.test(OFT$Velocity[OFT$Sex == 'Female' & OFT$Condition == 'Control'], 
                  OFT$Del_Vel[OFT$Sex == 'Female' & OFT$Condition == 'Control'])
F_str <- cor.test(OFT$Velocity[OFT$Sex == 'Female' & OFT$Condition == 'Stress'], 
                  OFT$Del_Vel[OFT$Sex == 'Female' & OFT$Condition == 'Stress'])
M_ctl <- cor.test(OFT$Velocity[OFT$Sex == 'Male' & OFT$Condition == 'Control'], 
                  OFT$Del_Vel[OFT$Sex == 'Male' & OFT$Condition == 'Control'])
M_str <- cor.test(OFT$Velocity[OFT$Sex == 'Male' & OFT$Condition == 'Stress'], 
                  OFT$Del_Vel[OFT$Sex == 'Male' & OFT$Condition == 'Stress'])
kable(rbind(c('Group', 'r (Pearson)', 'df', 'p-Value'),
            c('Female Control', unname(F_ctl$estimate), unname(F_ctl$parameter), F_ctl$p.value),
            c('Female Stress', unname(F_str$estimate), unname(F_str$parameter), F_str$p.value),
            c('Male Control', unname(M_ctl$estimate), unname(M_ctl$parameter), M_ctl$p.value),
            c('Male Stress', unname(M_str$estimate), unname(M_str$parameter), M_str$p.value)),
     caption = 'Correlation tests within Sex * Condition')

# ANOVA for OFT Velocity by group and sex
aov_Vel <- aov(Velocity ~ group_SI_Velocity * Sex + cohort_id, OFT)
sum_aov_Vel <- summary(aov_Vel)
sidak_Vel <- pairs(emmeans(aov_Vel, ~ group_SI_Velocity | Sex, adjust = 'sidak'))
pander(sum_aov_Vel, caption = 'ANOVA Velocity OFT')
kable(sidak_Vel, align='c', 
            caption = 'Sidak Post-Hoc Planned Contrasts: Velocity OFT')

# ANOVA for OFT Time in Center by group and sex
aov_Time <- aov(Center_Middle_Time ~ group_SI_Velocity * Sex + cohort_id, OFT)
sum_aov_Time <- summary(aov_Time)
sidak_Time <- pairs(emmeans(aov_Time, ~ group_SI_Velocity | Sex, adjust = 'sidak'))
pander(sum_aov_Time, caption = 'ANOVA Time in Center OFT')
kable(sidak_Time, align='c', 
            caption = 'Sidak Post-Hoc Planned Contrasts: Time in Center OFT')
```

------------------------------------------------------------------------

### Session Info

```{r}
#| label: Session Info
#| echo: False
sessionInfo()
```