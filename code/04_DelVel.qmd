---
title: 'Figure 4: Velocity as a heuristic'
format:
    html:
        code-fold: false
        self-contained: true
        toc: true
editor:
    render-on-save: false
---

Figure 4 links the SMS to Velocity as a heuristic to quantify the female witness effect. This notebook generates Figure 4 and Figure S4 as well as statistics for the results section **Velocity is a unifying feature and heuristic for social modulation**.

```{r}
#| label: libraries
#| message: false
#| code-fold: true

library(here)
library(glue)
library(dplyr)
library(tidyr)
library(knitr)
library(pander)
library(scales)
library(nlme)
library(emmeans)
library(ggplot2)
library(ggpubr)
library(ggpmisc)
library(cowplot)
library(effectsize)
library(pwr)
```

```{r}
#| label: config + paths + data
#| code-fold: true

source(here('styles.R'))
data_path <- here('data')

SIT_diff <- readRDS(glue('{data_path}/SIT_diff_primary_pcsms.rds'))
SIT_raw <- readRDS(glue('{data_path}/SIT_raw_primary.rds'))
syl_char <- readRDS(glue('{data_path}/SIT_syl_descriptives.rds'))
syl_info <- tibble(read.csv(glue('{data_path}/syllable_info.csv')))
```

------------------------------------------------------------------------

### U and D syllables differ in motion and body pose characteristics (Fig. 4a)

We fit an LME model to understand what differentiates up- and downregulated syllabels based on their locomotion characteristics. 

```{r}
#| label: syl characteristics prep
#| code-fold: true
#| warning: false

# Annotate syl characteristics df with social identity
syl_char$syl_name <- factor(
    syl_info$new_label[match(
        syl_char$syllable,
        substr(syl_info$metric, 4, 6)
    )],
    levels = c(
        "U1", "U2", "N1", "N2", "D1", "D2",
        "D3", "D4", "D5", "D6", "D7", "D8", "D9"
    )
)
syl_char$social_type <- ifelse(grepl("U", syl_char$syl_name), "Up",
    ifelse(grepl("D", syl_char$syl_name), "Down", "No Change")
)

# Avg per social identity type per animal
syl_char %<>%
    filter(social_type != "No Change") %>% # Only interested in U and D
    mutate(id_full = paste(cohort, id)) %>%
    mutate(outcome = ifelse(name %in% c("Velocity", "Distance"), "Motion",
        ifelse(name %in% c("Dist. to Center", "Dist. to Target", "Orientation"),
            "Location", "Pose"
        )
    )) %>% # Group outcome for plotting
    group_by(cohort, id, id_full, name, syl_name, social_type, outcome) %>%
    summarise(mean = mean(mean)) %>% # Avg freq per syllable per animal
    group_by(cohort, id, id_full, name, social_type, outcome) %>%
    summarise(mean = mean(mean)) %>% # Avg freq per social identity per animal
    group_by(name) %>% # ungroup; group by characteristics
    mutate(z_mean = scale(mean)) %>% # scale and center for each characteristic
    na.omit()

# Stats: LME model & EM means contrast
lme_syl_char <- lme(z_mean ~ social_type * name,
    data = syl_char,
    random = ~ 1 | cohort / id
)
lme_syl_char_table <- cbind(
    rownames(summary(lme_syl_char)$tTable),
    round(unname(summary(lme_syl_char)$tTable[, "Value"]), digits = 5),
    round(unname(summary(lme_syl_char)$tTable[, "Std.Error"]), digits = 5),
    round(unname(summary(lme_syl_char)$tTable[, "DF"]), digits = 5),
    round(unname(summary(lme_syl_char)$tTable[, "t-value"]), digits = 5)
)

mm_social <- emmeans(lme_syl_char, ~ social_type | name)
sidak_social_confint <- confint(pairs(mm_social, adjust = "sidak")) # confint and emmeans for plots
tests <- tibble(
    name = sidak_social_confint$name,
    estimate = round(sidak_social_confint$estimate, digits = 5),
    SE = round(sidak_social_confint$SE, digits = 5),
    lower_cl = round(sidak_social_confint$lower.CL, digits = 5),
    upper_cl = round(sidak_social_confint$upper.CL, digits = 5),
    outcome = syl_char$outcome[match(sidak_social_confint$name, syl_char$name)]
)
sidak_social <- summary(pairs(mm_social, adjust = "sidak")) # tratio and p-val for stats
tests$`t-ratio` <- round(sidak_social$t.ratio, digits = 5)
tests$`p-value` <- round(sidak_social$p.value, digits = 5)

em_plot <- ggplot(tests, aes(name, estimate, color = name)) +
    geom_hline(yintercept = 0, color = "gray30") +
    geom_point(size = 3) +
    geom_errorbar(aes(ymin = lower_cl, ymax = upper_cl), width = 0.4, linewidth = 1.1) +
    facet_grid(. ~ outcome, scales = 'free', space = 'free') + 
    scale_color_manual(values = c('#030637','#030637','#030637',
                              '#030637','#E95793','#030637','#030637')) + # Color based on direction of effect
    scale_fill_manual(values = c('#030637','#030637','#030637',
                              '#030637','#E95793','#030637','#030637')) + # Color based on direction of effect
    scale_y_continuous(
        breaks = pretty_breaks(), limits = c(-1.5, 2.5),
        name = "Estimated Marginal Mean Difference"
    ) +
    plot_theme +
    theme(
        axis.title.x = element_blank(),
        axis.text.x = element_text(angle = 45, hjust = 1),
        legend.position = "none"
    )
```

```{r}
#| label: fig 4a plot
#| echo: false 
#| fig-width: 8
#| fig-asp: 0.75
#| fig-align: center

em_plot
kable(lme_syl_char_table,
      col.names = c('','Value','Std. Error', 'DF', 't-Value'),
      caption = 'LME Social Identity * name')
kable(tests, caption = 'Sidak Post-Hoc Contrasts: Down - Up')
```

### $\Delta$Velocity correlates with PC2 and the SMS (Fig. 4b)

In line with the observation that locomotion variables differ between up- and downregulated syllables, we observe a strong correlation between PC2 and $\Delta$Velocity as well as between the SMS and $\Delta$Velocity.

```{r}
#| label: fig 4b prep
#| code-fold: true 
#| warning: false

PC2 <- ggplot(SIT_diff, aes(PC2, Velocity)) + 
  geom_point(aes(color = full_cond), size = 2, alpha = 0.5) + 
  stat_poly_line(col = 'black') +
  stat_poly_eq(size = 7, label.y = 'top', label.x = 'right') +
  scale_color_manual(values = col_full) + 
  scale_y_continuous(breaks = pretty_breaks(), name = (expression(Delta*' Velocity'))) +
  plot_theme + theme(legend.position = 'none')

SMS <- ggplot(SIT_diff, aes(SMS, Velocity)) + 
  geom_point(aes(color = full_cond), size = 2, alpha = 0.5) + 
  stat_poly_line(col = 'black') +
  stat_poly_eq(size = 7, label.y = 'bottom', label.x = 'right') +
  scale_color_manual(values = col_full) + 
  xlab('SMS') + ylab(expression(Delta*' Velocity')) +
  plot_theme

PC2_cor <- cor.test(SIT_diff$PC2, SIT_diff$Velocity)
SMS_cor <- cor.test(SIT_diff$SMS, SIT_diff$Velocity)
```

```{r}
#| label: fig 4b plot + stats
#| echo: false 
#| fig-width: 10
#| fig-asp: 0.5
#| fig-align: center
#| warning: false

plot_grid(PC2, SMS)
kable(rbind(PC2_cor, SMS_cor)[,1:4], digits = 5,
      caption = 'Pearson Correlation tests')
```

### $\Delta$Velocity and the SMS detect stress effects equally well (Fig. 4c, 4d)
We visually examine the distributions of the metrics below as well as formally compare effect sizes between the metrics. For  males, SI ratio is differentiates best between defeated and control males. In contrast, for females, both SMS and $\Delta$Velocity differentiate between witnesses and controls. While the effect sizes are slightly larger for the SMS, the heuristic $\Delta$Velocity still provides significant improvement in effect size over the SI ratio in females.

```{r}
#| label: fig 4c prep + plot
#| code-fold: true
#| fig-width: 10
#| fig-asp: 0.5
#| fig-align: center
#| warning: false

## Distributions Fig. 4c
format <- plot_theme + 
          theme(legend.position = 'none',
                axis.line.x = element_blank(),
                axis.text.x = element_blank(), 
                axis.title.x = element_blank(),
                axis.ticks.x = element_blank())

SI_distr <- ggplot() + 
              geom_density(data = SIT_diff[SIT_diff$Sex == 'Female', ], 
                           aes(x = IZ_time, color = full_cond, fill = full_cond),
                           alpha = 0.4) + 
              geom_density(data = SIT_diff[SIT_diff$Sex == 'Male', ], 
                           aes(x = IZ_time, y = -(..density..), color = full_cond, fill = full_cond),
                           alpha = 0.4) + 
              coord_flip() + xlab('SI Ratio') +
              scale_color_manual(values = col_full) + 
              scale_fill_manual(values = col_full) + 
              ylim(c(-1.5,1.2)) + format

diff_distr <- ggplot() + 
                geom_density(data = SIT_diff[SIT_diff$Sex == 'Female', ], 
                             aes(x = SMS, color = full_cond, fill = full_cond),
                             alpha = 0.4) + 
                geom_density(data = SIT_diff[SIT_diff$Sex == 'Male', ], 
                             aes(x = SMS, y = -(..density..), color = full_cond, fill = full_cond),
                             alpha = 0.4) + 
                coord_flip() + xlab('SMS') + 
              scale_color_manual(values = col_full) + 
              scale_fill_manual(values = col_full) + 
                ylim(c(-1.5,1.5)) + format

vel_distr <- ggplot() + 
              geom_density(data = SIT_diff[SIT_diff$Sex == 'Female', ], 
                           aes(x = Velocity, color = full_cond, fill = full_cond),
                           alpha = 0.4) + 
              geom_density(data = SIT_diff[SIT_diff$Sex == 'Male', ], 
                           aes(x = Velocity, y = -(..density..), color = full_cond, fill = full_cond),
                           alpha = 0.4) + 
              coord_flip() + xlab(expression(Delta*' Velocity')) +
              scale_color_manual(values = col_full) + 
              scale_fill_manual(values = col_full) + 
              ylim(c(-0.35,0.35)) + format

plot_grid(SI_distr, diff_distr, vel_distr,
          ncol = 3, nrow = 1, align = 'hv')
```

```{r}
#| label: fig 4d prep + plot
#| code-fold: true
#| fig-width: 10
#| fig-asp: 0.5
#| fig-align: center
#| warning: false

# Calculate abs. ESs by cohort
SIT_diff %>%
  group_by(cohort, Sex) %>%
  summarise(g_SI_ratio = abs(effectsize::hedges_g(IZ_time ~ Condition, .data)$Hedges_g),
            g_SMS = abs(effectsize::hedges_g(SMS ~ Condition, .data)$Hedges_g),
            g_Vel_diff = abs(effectsize::hedges_g(Velocity ~ Condition, .data)$Hedges_g)) %>%
  pivot_longer(cols = c('g_SI_ratio', 'g_SMS', 'g_Vel_diff'),
               values_to = 'hedges_g', names_to = 'metric') %>%
  mutate(metric = factor(metric, levels = c('g_SI_ratio', 'g_SMS', 'g_Vel_diff'),
                           labels = c('SI Ratio', 'SMS', 'Velocity')),
         Sex = factor(Sex, levels = c('Male', 'Female'))) -> g_es_cohort

# Calculate overall ES
SIT_diff %>%
  group_by(Sex) %>%
  summarise(g_SI_ratio = abs(effectsize::hedges_g(IZ_time ~ Condition, .data)$Hedges_g),
            g_SMS = abs(effectsize::hedges_g(SMS ~ Condition, .data)$Hedges_g),
            g_Vel_diff = abs(effectsize::hedges_g(Velocity ~ Condition, .data)$Hedges_g)) %>%
  pivot_longer(cols = c('g_SI_ratio', 'g_SMS', 'g_Vel_diff'),
               values_to = 'hedges_g', names_to = 'metric') %>%
  mutate(metric = factor(metric, levels = c('g_SI_ratio', 'g_SMS', 'g_Vel_diff'),
                           labels = c('SI Ratio', 'SMS', 'Velocity')),
         Sex = factor(Sex, levels = c('Male', 'Female'))) -> g_es

# Plot
es_plot <- ggplot(g_es_cohort, aes(Sex, hedges_g)) + 
                  geom_hline(yintercept = pwr.t.test(n = 100, sig.level = 0.05, power = 0.8)$d, 
                             color = 'gray80') +
                  geom_hline(yintercept = pwr.t.test(n = 25, sig.level = 0.05, power = 0.8)$d, 
                             color = 'gray80') + 
                  geom_hline(yintercept = pwr.t.test(n = 10, sig.level = 0.05, power = 0.8)$d, 
                             color = 'gray80') + 
                  geom_jitter(height = 0, width = 0.08, size = 2, alpha = 0.5) + 
                  stat_summary(fun = 'mean', geom = 'point', size = 3) + 
                  stat_summary(fun.data = 'mean_se', geom = 'errorbar', 
                               linewidth = 1, width = 0.35) + 
                  ylab(expression("Absolute Hedge's"*" "*italic("g"))) + 
                  facet_grid(. ~ metric) + 
                  plot_theme + 
                  theme(axis.title.x = element_blank(),
                  legend.position = 'none')

es_plot 
```

------------------------------------------------------------------------

### $\Delta$Velocity effects are driven by differences in Target trial between control and witness females (Fig. S4)

We find that the differences in $\Delta$Velocity are largely driven by changes in the Target trial. 

```{r}
#| label: fig s4 prep + plot
#| code-fold: true
#| fig-width: 10
#| fig-asp: 0.9
#| fig-align: center
#| warning: false

point <- ggplot(SIT_diff, aes(Condition, Velocity, color = full_cond, fill = full_cond)) + 
  geom_jitter(width = 0.2, alpha = 0.2, height = 0) +
  stat_summary(fun.y = 'mean', geom = 'point', size = 2) + 
  stat_summary(fun.data = 'mean_se', geom = 'errorbar', 
               linewidth = 1, width = 0.4) + 
  scale_y_continuous(name = expression(Delta*' Velocity'), expand = c(0,0,0,0), breaks = c(0,2,4,6,8)) + 
  facet_wrap(Sex ~ ., nrow = 2) + 
  scale_color_manual(values = col_full) + 
  plot_theme + 
  theme(legend.position = 'None',
        axis.title.x = element_blank())

hist <- ggplot(SIT_diff, aes(y=Velocity, color = full_cond, fill = full_cond)) + 
  geom_density(alpha = 0.4) +
  scale_x_continuous(expand = c(0,0), limits = c(0,.3),
                     breaks = c(0,0.5,1),  name = c('Density')) + 
  scale_y_continuous(name = 'SI Ratio', expand = c(0,0,0,0)) + 
  scale_color_manual(values = col_full) + 
  scale_fill_manual(values = col_full) + 
  plot_theme + 
  facet_wrap(Sex ~ ., nrow = 2) + format

Vel <- plot_grid(point, hist + clean_theme(), 
          ncol = 2, nrow = 1, align = 'hv', rel_widths = c(1.5,1))

Raw <- ggplot(SIT_raw, aes(Condition, Velocity, color = full_cond, fill = full_cond)) + 
  geom_hline(yintercept = 1) + 
  geom_jitter(width = 0.2, alpha = 0.2, height = 0) +
  stat_summary(fun.y = 'mean', geom = 'point',  size = 2) + 
  stat_summary(fun.data = 'mean_se', geom = 'errorbar', 
               linewidth = 1, width = 0.4) + 
  scale_y_continuous(name = 'Velocity', expand = c(0,0,0.2,0)) + 
  facet_grid(Sex ~ Trial_type) + 
  scale_color_manual(values = col_full) + 
  plot_theme + 
  theme(legend.position = 'None',
        axis.title.x = element_blank())

plot_grid(Vel, Raw)
```

```{r}
#| label: fig s3 stats prep
#| code-fold: true
#| warning: false

# Delta Vel ANOVA
aov_Velocity <- aov(Velocity ~ Condition * Sex + cohort, SIT_diff) 
sum_aov_Velocity <- summary(aov_Velocity)

sidak_cond_sex <- pairs(emmeans(aov_Velocity, ~ Condition | Sex), adjust = 'sidak')
sidak_sex_cond <- pairs(emmeans(aov_Velocity, ~ Sex | Condition), adjust = 'sidak')

# Velocity rmANOVAs per Sex
m_data <- SIT_raw[SIT_raw$Sex == 'Male',]
m_aov <- aov(Velocity ~ Condition * Trial_type + cohort + Error(id_full), m_data)
f_data <- SIT_raw[SIT_raw$Sex == 'Female',]
f_aov <- aov(Velocity ~ Condition * Trial_type + cohort + Error(id_full), f_data)

# Sidak 
sidak_cond_tt_m <- pairs(emmeans(m_aov, ~ Condition | Trial_type), adjust = 'sidak')
sidak_tt_cond_m <- pairs(emmeans(m_aov, ~ Trial_type | Condition), adjust = 'sidak')
sidak_cond_tt_f <- pairs(emmeans(f_aov, ~ Condition | Trial_type), adjust = 'sidak')
sidak_tt_cond_f <- pairs(emmeans(f_aov, ~ Trial_type | Condition), adjust = 'sidak')

```

```{r}
#| label: fig s3 stats
#| echo: false
#| warning: false


pander(sum_aov_Velocity,
        caption = 'ANOVA: Sex * Condition ~ Delta Velocity')
kable(rbind(sidak_cond_sex, sidak_sex_cond), 
            digits = 5, align='c', 
            caption = 'Sidak Post-Hoc Planned Contrasts of ANOVA')
            
pander(summary(m_aov), caption = 'rmANOVA in Males')
kable(sidak_cond_tt_m, digits = 5, align='c', caption = 'Sidak Post-Hoc Planned Contrasts in Males: Ctl vs Stress')
kable(sidak_tt_cond_m, digits = 5, align='c', caption = 'Sidak Post-Hoc Planned Contrasts in Males: NT vs T')

pander(summary(f_aov), caption = 'rmANOVA in Females')
kable(sidak_cond_tt_f, digits = 5, align='c', caption = 'Sidak Post-Hoc Planned Contrasts in Females: Ctl vs Stress')
kable(sidak_tt_cond_f, digits = 5, align='c', caption = 'Sidak Post-Hoc Planned Contrasts in Females: NT vs T')
```

------------------------------------------------------------------------

### Session Info

```{r}
#| label: Session Info
#| echo: False
sessionInfo()
```